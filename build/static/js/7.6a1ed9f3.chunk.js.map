{"version":3,"file":"static/js/7.6a1ed9f3.chunk.js","mappings":"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","sources":["components/LineChart.jsx","Pages/CryptoDetail.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Chart from \"chart.js/auto\";\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = coinHistory?.data?.history\r\n    ? coinHistory.data.history.map((item) => item.price)\r\n    : [];\r\n\r\n  const coinTimestap = coinHistory?.data?.history\r\n    ? coinHistory.data.history.map((item) => {\r\n        return new Date(item.timestamp * 1000).toLocaleDateString();\r\n      })\r\n    : [];\r\n\r\n  const data = {\r\n    labels: coinTimestap,\r\n    datasets: [\r\n      {\r\n        label: \"Price In USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#black\",\r\n        borderColor: \"#444\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between my-4\">\r\n        <p className=\"text-xl\">\r\n          Change:{\" \"}\r\n          {coinHistory?.data?.change > 0 ? (\r\n            <span className=\"text-green-500\">{coinHistory?.data?.change}%</span>\r\n          ) : (\r\n            <span className=\"text-rose-500\">{coinHistory?.data?.change} %</span>\r\n          )}\r\n        </p>\r\n        <p className=\"text-xl\">\r\n          Current {coinName} Price: ${\" \"}\r\n          <span className=\"text-blue-600\">{currentPrice}</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"w-full lg:w-3/4 mx-auto\">\r\n        <Line data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import millify from \"millify\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../services/cryptoApi\";\r\nimport {\r\n  AiOutlineDollarCircle,\r\n  AiOutlineNumber,\r\n  AiOutlineThunderbolt,\r\n  AiOutlineTrophy,\r\n  AiOutlineMoneyCollect,\r\n  AiOutlineFund,\r\n  AiOutlineCheck,\r\n  AiOutlineStop,\r\n  AiOutlineExclamationCircle,\r\n} from \"react-icons/ai\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport LineChart from \"../components/LineChart\";\r\nconst CryptoDetail = () => {\r\n  const param = useParams();\r\n  // const [timeperiod, setTimeperiod] = useState(\"\");\r\n\r\n  const [period, setPeriod] = useState('24h');\r\n\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(param.coinId);\r\n  const { data: coinHistory  } = useGetCryptoHistoryQuery({\r\n    id: param.coinId,\r\n    timeperiod: period,\r\n  });\r\n\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`,\r\n      icon: <AiOutlineDollarCircle />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails?.rank, icon: <AiOutlineNumber /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails && millify(cryptoDetails[\"24hVolume\"])}`,\r\n      icon: <AiOutlineThunderbolt />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${\r\n        cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)\r\n      }`,\r\n      icon: <AiOutlineDollarCircle />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${\r\n        cryptoDetails?.allTimeHigh?.price &&\r\n        millify(cryptoDetails?.allTimeHigh?.price)\r\n      }`,\r\n      icon: <AiOutlineTrophy />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails?.numberOfMarkets,\r\n      icon: <AiOutlineFund />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails?.numberOfExchanges,\r\n      icon: <AiOutlineMoneyCollect />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails?.supply?.confirmed ? (\r\n        <AiOutlineCheck />\r\n      ) : (\r\n        <AiOutlineStop />\r\n      ),\r\n      icon: <AiOutlineExclamationCircle />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)\r\n      }`,\r\n      icon: <AiOutlineExclamationCircle />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.circulating &&\r\n        millify(cryptoDetails?.supply?.circulating)\r\n      }`,\r\n      icon: <AiOutlineExclamationCircle />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"h-auto w-full grow \">\r\n      {cryptoDetails && (\r\n        <div>\r\n          <div className=\"my-4\">\r\n            <h3 className=\"text-center text-3xl text-blue-500\">\r\n              {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\r\n            </h3>\r\n            <p className=\"text-slate-600 text-center\">\r\n              {cryptoDetails.name} live price in US Dollar (USD). View value\r\n              statistics, market cap and supply.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"flex justify-center\">\r\n            <select\r\n              placeholder=\"Select Timeperiod\"\r\n              onChange={(e) => setPeriod(e.target.value)}\r\n              className=\"w-full md:w-60 mt-6 p-2 border bg-gray-50 font-bold\"\r\n            >\r\n              {time.map((date) => (\r\n                <option value={date} key={date}>\r\n                  {date}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {/* select time periode */}\r\n\r\n          { coinHistory &&  <div>\r\n            <LineChart\r\n              coinHistory={coinHistory}\r\n              currentPrice={millify(cryptoDetails.price)}\r\n              coinName={cryptoDetails.name}\r\n            />\r\n          </div>}\r\n          {/* line chart */}\r\n\r\n          <h4 className=\"text-xl mt-6 text-center\">\r\n            {cryptoDetails.name} Value Statistics\r\n          </h4>\r\n          <p className=\" text-center text-slate-600\">\r\n            An overview showing the statistics of {cryptoDetails.name}, such as\r\n            the base and quote currency, the rank, and trading volume.\r\n          </p>\r\n\r\n          <div className=\"flex flex-col divide-y md:w-1/2 mx-auto  mt-10\">\r\n            {stats.map(({ icon, title, value }) => (\r\n              <div key={title} className=\"flex items-center p-2\">\r\n                <div className=\"text-3xl\">{icon}</div>\r\n                <div>{title}</div>\r\n                <div className=\"ml-auto font-bold\">{value}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {/* show statistics */}\r\n\r\n          <h4 className=\"text-xl mt-6 text-center\">Other Stats Info</h4>\r\n          <p className=\" text-center text-slate-600\">\r\n            An overview showing the statistics of {cryptoDetails.name}, such as\r\n            the base and quote currency, the rank, and trading volume.\r\n          </p>\r\n          <div className=\"flex flex-col divide-y md:w-1/2 mx-auto  mt-10\">\r\n            {genericStats.map(({ icon, title, value }) => (\r\n              <div key={title} className=\"flex items-center p-2\">\r\n                <div className=\"text-3xl\">{icon}</div>\r\n                <div>{title}</div>\r\n                <div className=\"ml-auto font-bold\">{value}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {/* show other statistic */}\r\n\r\n          <div className=\"my-6 text-justify space-y-2\">\r\n            <h2 className=\"text-3xl text-blue-500\">\r\n              What is {cryptoDetails.name}?\r\n            </h2>\r\n            <div className=\"custom-details space-y-2\">\r\n              {HTMLReactParser(cryptoDetails.description)}\r\n            </div>\r\n          </div>\r\n          {/* More Details */}\r\n\r\n          <h3 className=\"text-2xl mt-4 mb-2\">{cryptoDetails.name} Links</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\">\r\n            {cryptoDetails.links?.map((link) => (\r\n              <div\r\n                className=\"flex justify-between items-center p-2 border bg-gray-100 hover:bg-gray-200 transition-all\"\r\n                key={link.name}\r\n              >\r\n                <p className=\"font-bold\">{link.type}</p>\r\n                <a\r\n                  href={link.url}\r\n                  className=\"text-blue-500 hover:text-blue-700\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  {link.name}\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {/* links */}\r\n        </div>\r\n      )}\r\n      {/* show coin details */}\r\n\r\n      <div className=\"flex items-center justify-center\">\r\n        {isFetching && <Spinner className=\"w-12 h-12 border-b-blue-500\" />}\r\n      </div>\r\n      {/* show loading spinner when fetching data */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoDetail;\r\n"],"names":["coinHistory","currentPrice","coinName","coinPrice","data","history","map","item","price","labels","Date","timestamp","toLocaleDateString","datasets","label","fill","backgroundColor","borderColor","className","change","param","useParams","useState","period","setPeriod","useGetCryptoDetailsQuery","coinId","isFetching","useGetCryptoHistoryQuery","id","timeperiod","cryptoDetails","coin","stats","title","value","millify","icon","rank","marketCap","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","supply","confirmed","total","circulating","name","symbol","placeholder","onChange","e","target","date","HTMLReactParser","description","links","link","type","href","url","rel","Spinner"],"sourceRoot":""}